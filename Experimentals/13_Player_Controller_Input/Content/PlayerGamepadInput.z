/*!*****************************************************************************
@brief      A Player input provider, generating input data using the left stick of a gamepad.
@date       10/06/2015
@author     Johannes Peter (j.peter\@digipen.edu)
@par        url: https://github.com/JohannesMP/Zilch-Snippets-and-Libraries
@details
    Sends PlayerMovement event to be used by a GamepadStateManager.

    While the gamepad id is hard-coded, you could set it via scripts. For example,
    Have a script that spawns a player when a controller is plugged in, using the id
    of that controller.

@copyright
    All content Â© 2015 DigiPen (USA) Corporation, all rights reserved
*******************************************************************************/


class PlayerGamepadInput : ZilchComponent
{
    // Note: 'sends' just registers the event.
    sends PlayerMovement : PlayerMovementEvent;
    
    [Dependency] var PlayerController : PlayerController;
    
    [Property]
    var GamepadID : Integer;
    
    var GamepadIsActive : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.GameSession, Events.GamepadFound, this.OnGamepadFound);
        Zero.Connect(this.GameSession, Events.GamepadLost, this.OnGamepadLost);
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnGamepadLost(event : GamepadStateEvent)
    {
        if(event.PadID == this.GamepadID)
        {
            this.GamepadIsActive = false;
        }
    }

    function OnGamepadFound(event : GamepadStateEvent)
    {
        if(event.PadID == this.GamepadID)
        {
            this.GamepadIsActive = true;
        }
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.GamepadIsActive)
        {
            var pad = Zero.Gamepads.GetGamePad(this.GamepadID);
            var movement = pad.LeftStick;
            this.Owner.DispatchEvent(Events.PlayerMovement, PlayerMovementEvent(movement));
        }
    }
}
