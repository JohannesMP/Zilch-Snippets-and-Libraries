Level = 
{
	LevelSettings = 
	{
		LinkId = 
		{
			uint Id = 1,
		},
		Named = 
		{
			string Name = "LevelSettings",
		},
		GravityEffect = 
		{
			bool Active = true,
			bool WakeUpOnChange = false,
			bool LocalSpaceDirection = true,
			float Strength = 20,
			Vec3 Direction = [0, -1, 0],
		},
		DragEffect = 
		{
			bool Active = true,
			bool WakeUpOnChange = false,
			float Drag = 1,
		},
		CameraViewport = 
		{
			bool Background = true,
			Vec2 Offset = [0, 0],
			Vec2 Size = [1, 1],
			int Layer = 0,
			bool Active = true,
			bool Blocking = true,
			uint Renderer = 1,
			uint Camera = 2,
			ViewportScaling Scaling = Fill,
			Vec2 Resolution = [1280, 720],
			Vec4 MarginColor = [0, 0, 0, 1],
		},
		ForwardRenderer = 
		{
			Vec4 ClearColor = [0.155, 0.155, 0.155, 1],
			bool DrawNonVisible = false,
			bool DrawDebugObjects = true,
			bool DrawEditorIcons = true,
			bool EditorIconDepth = true,
			bool Wireframe = false,
		},
		GridDraw = 
		{
			bool Active = true,
			bool HalfCellOffset = false,
			float CellSize = 1,
			GridAxis Axis = ZAxis,
			int Lines = 100,
			bool DrawAxisOrigins = true,
			bool AlwaysDrawInEditor = true,
			bool DrawInGame = true,
			Vec4 GridColor = [0.5, 0.5, 0.5, 0.4],
			Vec4 GridHiLight = [0, 0, 0, 0.4],
			int HilightInterval = 10,
			bool FollowEditorCamera = false,
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 3,
		},
		Named = 
		{
			string Name = "EditorCamera",
		},
		Transform = 
		{
			Vec3 Translation = [24.354, 8.45706, 71.1211],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [-0.0330022, 0.243474, 0.00828957, 0.96931],
		},
		Camera = 
		{
			ProjectionMode ProjectionMode = Perspective,
			Facing Facing = NegativeZ,
			CameraTransparentSort TransparentSort = ZDepth,
			float FieldOfView = 45,
			float NearPlane = 0.5,
			float FarPlane = 500,
			float Size = 20,
		},
		EditorCameraController = 
		{
			ControlMode ControlMode = ZPlane,
			float LookDistance = 74.5912,
			float VerticalAngle = 0.0680678,
			float HorizontalAngle = -0.492183,
			Vec3 LookTarget = [-10.8125, 3.38372, 5.53587],
			float MoveSensitivity = 1,
		},
		EditorRenderer = 
		{
			Vec4 ClearColor = [0.155, 0.155, 0.155, 1],
			bool DrawNonVisible = true,
			bool DrawDebugObjects = true,
			bool DrawEditorIcons = true,
			bool Wireframe = false,
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 2,
		},
		Named = 
		{
			string Name = "Camera",
		},
		Transform = 
		{
			Vec3 Translation = [7.31853, 4.7236, 39.4852],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0.20311, 0, 0.979156],
		},
		Camera = 
		{
			ProjectionMode ProjectionMode = Perspective,
			Facing Facing = NegativeZ,
			CameraTransparentSort TransparentSort = InheritFromSpace,
			float FieldOfView = 45,
			float NearPlane = 0.5,
			float FarPlane = 200,
			float Size = 20,
		},
		Microphone = 
		{
			bool Active = true,
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 4,
		},
		Named = 
		{
			string Name = "Sprite",
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 5,
		},
		Named = 
		{
			string Name = "Cube",
		},
		Transform = 
		{
			Vec3 Translation = [0, 0, 0],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Model = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = false,
			bool CastShadows = true,
			string MaterialName = "4de020863e85bb61:DefaultMaterial",
			string MeshName = "4de0354322b345ae:Cube",
			Vec4 Color = [1, 1, 1, 1],
		},
		RigidBody = 
		{
			bool Static = false,
			bool Asleep = false,
			bool Kinematic = false,
			bool RotationLocked = false,
			bool Mode2D = false,
			bool AllowSleep = true,
			bool Inherit2DMode = false,
			Vec3 Velocity = [5, 20, 15],
			Vec3 AngularVelocity = [5, 0, 0],
		},
		BoxCollider = 
		{
			bool Ghost = false,
			bool SendsMessages = true,
			bool Seamless = true,
			string MaterialName = "4de020863e872da8:DefaultPhysicsMaterial",
			string SerializedGroupName = "4e740859314e5515:DefaultGroup",
			Vec3 Offset = [0, 0, 0],
			Vec3 Size = [0.5, 0.5, 0.5],
		},
		ArcTest = 
		{
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 6,
		},
		Named = 
		{
			string Name = "SpriteText",
		},
		Transform = 
		{
			Vec3 Translation = [-13.8099, 6.77911, -1.72718],
			Vec3 Scale = [1.55366, 1.55366, 1.55366],
			Quat Rotation = [0, 0.262171, 0, 0.965021],
		},
		SpriteText = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = false,
			bool CastShadows = false,
			Vec4 Color = [1, 1, 1, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			TextPositionMode Position = Centered,
			string FontName = "4e7bac697bec55c5:Verdana",
			uint FontSize = 30,
			string Text = "ArcPrediction Demo
------------------

This demo draws various arcs showing the balistics path
of the provided object in 3d space.

1. Run the editor (F5)
2. Enable In-game Editor (F9) to allow you to
   rotate your camera (Alt+right click)

The cube's path is Predicted by the center Arc.

Controls:

   1 / 2  : The length of the arc that is simulated.
   [ / ]  : The number of alternate arcs simulated (rotated about the z axis)
   - / =  : Change gravity (will not affect the cube's position)
   , / .  : Change drag    (will not affect the cube's position)
   ; / '  : Change arc resolution (how many line segments are drawn)
       T  : Toggle Arc Vertex (highest point) indicator
       P  : Pause Cube
       R  : Restart Cube Path",
			bool OnTop = false,
			Vec2 Size = [0, 0],
			TextAlign Align = Left,
			float PixelsPerUnit = 64,
			bool Smoothing = true,
		},
		Area = 
		{
			Vec2 Size = [25.4386, 11.8639],
			Location Origin = Center,
		},
		SpriteTextBlock = 
		{
			string TextBlock = "54f8f5a8ffd79e12:TextStuff",
		},
	},
},
